#version 460 core

layout(local_size_x = 16, local_size_y = 16, local_size_z = 1) in;
layout(rgba16f, binding = 0) uniform image2D U_combine;
layout(rgba8, binding = 1) uniform image2D U_selection;

float map(float x, float ai, float bi, float ao, float bo){
	x = (x - ai)/(bi-ai);
	x = clamp(x, 0, 1);
	return ao+(bo-ao)*x;
}

void main(){

	float range = 0.05;

	ivec2 uv = ivec2(gl_GlobalInvocationID.xy);
	vec4 inp = imageLoad(U_combine, uv);

	float Select = imageLoad(U_selection, uv).g;
	Select = smoothstep(1.0-range, 0.5+range, Select) * smoothstep(0.0+range, 0.5-range, Select);

	imageStore(U_combine, uv, inp+vec4(vec3(Select), 0));
	//imageStore(U_combine, uv, vec4(vec3(Select), 1));
}