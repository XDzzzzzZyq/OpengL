#version 460 core

layout(local_size_x = 4, local_size_y = 4, local_size_z = 1) in;
layout(rgba16f, binding = 0) uniform image2D U_combine;
layout(rgba8, binding = 1) uniform image2D U_selection;

float map(float x, float ai, float bi, float ao, float bo){
	x = (x - ai)/(bi-ai);
	x = clamp(x, 0, 1);
	return ao+(bo-ao)*x;
}

void main(){

	ivec2 uv = ivec2(gl_GlobalInvocationID.xy);
	vec4 inp = imageLoad(U_combine, uv);

	float Select = imageLoad(U_selection, uv).g;
	Select = map(Select, 0.5, 0.55, 1, 0)* map(Select, 0.2, 0.25, 0, 1);

	imageStore(U_combine, uv, inp+vec4(vec3(Select), 1));

	//imageStore(result, uv, color2*vec4(vec3(3),1));
	//imageStore(result, uv, vec4(fract(5*uvf),1,1));
}