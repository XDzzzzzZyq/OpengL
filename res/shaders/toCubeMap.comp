#version 460 core

layout(local_size_x = 4, local_size_y = 4, local_size_z = 1) in;

layout(rgba16f, binding = 0) uniform imageCube U_result;

uniform int resol;
uniform sampler2D U_etangular;

vec2 genHdrUV(vec3 dir) {
	vec2 uv = vec2(atan(dir.y, dir.x), asin(dir.z));
	uv *= -vec2(0.15915494, 0.31830988);
	uv += 0.5;
	return uv;
}

vec3 GetDir(ivec3 loc){

	vec2 uv = (loc.xy + 0.5)/float(resol);

    vec3 dir = normalize(vec3(1, (uv-0.5)*2));
    vec3 X = vec3(1, 0, 0);
    vec3 Y = vec3(0, 1, 0);
    vec3 Z = vec3(0, 0, 1);
    /**/
    switch(int(loc.z)){
    case 0:
        dir = mat3(Y, -Z, -X) * dir;
        break;
    case 1:
        dir = mat3(-Y, Z, -X) * dir;
        break;
    case 2:
        dir = mat3(X, Y, Z) * dir;
        break;
    case 3:
        dir = mat3(-X, Y, -Z) * dir;
        break;
    case 4:
        dir = mat3(Z, Y, -X) * dir;
        break;
    case 5:
        dir = mat3(-Z, -Y, -X) * dir;
        break;
    }

    return mat3(Y, -X, Z) * dir;
}

void main(){

	ivec3 texCoord = ivec3(gl_GlobalInvocationID.xyz);

    vec3 dir = GetDir(texCoord);

    vec4 col = texture(U_etangular, genHdrUV(-dir));
	imageStore(U_result, texCoord, col);
}
