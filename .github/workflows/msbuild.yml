# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: MSBuild

on:
  push:
    branches: [ "github-action", "master", "test" ]
  pull_request:
    branches: [ "master" ]

env:
  # Path to the solution file relative to the root of the project.
  SOLUTION_FILE_PATH: .

permissions:
  contents: read

jobs:
  build:
    runs-on: windows-latest

    strategy:
      matrix:
        CONFIG: [Release, Debug]
        PLATFORM: [x86, x64]

    steps:
    - name: Set Platform dir
      run: echo "PLATFORM_DIR=$($(("${{matrix.PLATFORM}}" == "x64")) ? "x64":"Win32")" >> $GITHUB_ENV
      
    - uses: actions/checkout@v4
      name: Checkout
      with:   
        submodules: true

    - name: Add MSBuild to PATH
      uses: microsoft/setup-msbuild@v2

    - name: Restore NuGet packages
      working-directory: ${{env.GITHUB_WORKSPACE}}
      run: nuget restore ${{env.SOLUTION_FILE_PATH}}

    - name: Build
      working-directory: ${{env.GITHUB_WORKSPACE}}
      # Add additional options to the MSBuild command line here (like platform or verbosity level).
      # See https://docs.microsoft.com/visualstudio/msbuild/msbuild-command-line-reference
      run: msbuild /m /p:Configuration=${{matrix.CONFIG}},Platform=${{matrix.PLATFORM}} ${{env.SOLUTION_FILE_PATH}}

    - name: Upload test results
      uses: actions/upload-artifact@v2
      with:
        name: test-${{matrix.CONFIG}}-${{matrix.PLATFORM}}
        path: test/renderer/build/${{env.PLATFORM_DIR}}/${{matrix.CONFIG}}/

  test:
    needs: build
    runs-on: windows-latest
    strategy:
      matrix:
        CONFIG: [Release, Debug]
        PLATFORM: [x86, x64]

    steps:
    - name: Download test result
      uses: actions/download-artifact@v2
      with:
        name: test-${{matrix.CONFIG}}-${{matrix.PLATFORM}}
        
    - name: show folder
      run: tree /f
